{"trial_id": "0001", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "lstm_units", "default": null, "conditions": [], "min_value": 8, "max_value": 128, "step": 8, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "optimizer", "default": "adam", "conditions": [], "values": ["adam", "sgd"], "ordered": false}}, {"class_name": "Float", "config": {"name": "learning_rate", "default": 0.0001, "conditions": [], "min_value": 0.0001, "max_value": 0.01, "step": 0.001, "sampling": "linear"}}], "values": {"lstm_units": 128, "optimizer": "sgd", "learning_rate": 0.0041, "tuner/epochs": 2, "tuner/initial_epoch": 0, "tuner/bracket": 2, "tuner/round": 0}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"c:\\Users\\Dell\\Desktop\\MP\\myenv\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\Dell\\Desktop\\MP\\myenv\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\Dell\\Desktop\\MP\\myenv\\lib\\site-packages\\keras_tuner\\src\\tuners\\hyperband.py\", line 427, in run_trial\n    return super().run_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\Dell\\Desktop\\MP\\myenv\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"c:\\Users\\Dell\\Desktop\\MP\\myenv\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 232, in _build_and_fit_model\n    model = self._try_build(hp)\n  File \"c:\\Users\\Dell\\Desktop\\MP\\myenv\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 164, in _try_build\n    model = self._build_hypermodel(hp)\n  File \"c:\\Users\\Dell\\Desktop\\MP\\myenv\\lib\\site-packages\\keras_tuner\\src\\tuners\\hyperband.py\", line 430, in _build_hypermodel\n    model = super()._build_hypermodel(hp)\n  File \"c:\\Users\\Dell\\Desktop\\MP\\myenv\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 155, in _build_hypermodel\n    model = self.hypermodel.build(hp)\n  File \"C:\\Users\\Dell\\AppData\\Local\\Temp\\ipykernel_12548\\3698895018.py\", line 42, in build_model\n    optimizer_instance = SGD(learning_rate=hp.Float('learning_rate', min_value=0.0001, max_value=0.01, step=0.001),\n  File \"c:\\Users\\Dell\\Desktop\\MP\\myenv\\lib\\site-packages\\keras\\src\\optimizers\\sgd.py\", line 114, in __init__\n    super().__init__(\n  File \"c:\\Users\\Dell\\Desktop\\MP\\myenv\\lib\\site-packages\\keras\\src\\optimizers\\optimizer.py\", line 1094, in __init__\n    super().__init__(\n  File \"c:\\Users\\Dell\\Desktop\\MP\\myenv\\lib\\site-packages\\keras\\src\\optimizers\\optimizer.py\", line 106, in __init__\n    self._process_kwargs(kwargs)\n  File \"c:\\Users\\Dell\\Desktop\\MP\\myenv\\lib\\site-packages\\keras\\src\\optimizers\\optimizer.py\", line 135, in _process_kwargs\n    raise ValueError(\nValueError: decay is deprecated in the new Keras optimizer, please check the docstring for valid arguments, or use the legacy optimizer, e.g., tf.keras.optimizers.legacy.SGD.\n"}